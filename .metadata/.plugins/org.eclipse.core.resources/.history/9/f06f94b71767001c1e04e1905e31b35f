

import java.util.Date;
import java.util.List;
import java.util.Properties;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import compte.comptes.Compte;
import compte.comptes.CompteCourant;
import compte.comptes.CompteEpargne;
import users.actors.Client;
import users.Group;
import users.actors.Employee;
import users.groupmembers.GroupMembers;
import users.session.GestionProjetRemote;


public class Test {
	
	public static void main(String[] args) {
		try
		{
			Properties prop = new Properties();
			prop.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");
			Context ctx = new InitialContext(prop);
			GestionProjetRemote stub = (GestionProjetRemote)ctx.lookup("ejb:/ProjectEJB/PRJCT!users.session.GestionProjetRemote");
			
			
			Client c = new Client("client@demo.com","12345678","Ahmed");
			Client c2 = new Client("client2@demo.com","12345678","Ali");
			Group g = new Group("Delta");
			Employee e = new Employee("employe@demo.com","12345678",1200);
			
			//(1)ajout
			/*stub.ajouterClient(c);
			stub.ajouterClient(c2);
			stub.ajouterEmploye(e);
			stub.ajouterGroupe(g);*/
			
			/*
			//(2)consultation par 1
			c = stub.consultationClient(1);
			c2 = stub.consultationClient(2);
			e = stub.consultationEmploye(3);
			g = stub.consultationGroupe(1);
			System.out.println("client " + c.getId() + " email "+ c.getEmail());
			System.out.println("client " + c2.getId() + " email "+ c2.getEmail());
			System.out.println("Employe " + e.getId() + " email "+ e.getEmail());
			System.out.println("Groupe " + g.getId() + " Nom "+ g.getName());
			*/
			/*
			//(3) creation comptes
			Compte cpc = new CompteCourant(1000f, new Date(),100);
			Compte cpe = new CompteEpargne(1100f, new Date(), 50);
			stub.ajouterCompte(cpc,c.getId(),e.getId());
			stub.ajouterCompte(cpe,c2.getId(),e.getId());
			*/
			/*
			//(4) ajout d'un employe a un group
			GroupMembers gm = new GroupMembers();
			stub.ajouterEmplAGroup(e.getId(), g.getId(), gm);
			*/
			
			/*
			//(5) Consultation clients
			List<Client> clients = stub.consultationClients();
			
			for(Client cp:clients){
			System.out.println("Client : "+cp.getName()+"--"+cp.getId());
			}
			//Consultation employes
			List<Employee> employes = stub.consultationEmployes();
			
			for(Employee cp:employes){
			System.out.println("Employe : "+cp.getEmail()+"--"+cp.getId()+" -Solde- "+ cp.getSolde());
			}
			//Consultation groupes
			List<Group> groupes = stub.consultationGroupes();
			
			for(Group cp:groupes){
			System.out.println("Groupe : "+cp.getId()+"--"+cp.getName());
			}
			*/
			
			//Consultation les membres de groupe
			g = stub.consultationGroupe(1);
			List<GroupMembers> grpm = stub.consultationMembresGroupe(g.getId());
			
			for(GroupMembers cp:grpm){
			System.out.println("Employe : "+cp.getEmployee().getEmail()+" -- "+cp.getEmployee().getId()+" -Solde- "+ cp.getEmployee().getSolde());
			}
		} catch (NamingException e){
			e.printStackTrace();
		}
		
	}
}

