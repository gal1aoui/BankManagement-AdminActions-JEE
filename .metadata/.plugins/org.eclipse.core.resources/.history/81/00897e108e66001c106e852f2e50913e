package users.actors;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import users.Group;
import users.groupmembers.GroupMembers;

import compte.operations.Operation;

@Entity
@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)
public abstract class Employee implements Serializable {
/* If you use GenerationType.AUTO then by default hibernate uses hibernate_sequence for the sequence which is used by all tables and only
* one sequence value can be consumed at a time which means if sequence 1 is used then it can not be used anywhere else. But with GenerationType.IDENTITY
* the ids are only unique for that particular column.
* https://stackoverflow.com/questions/33096466/generationtype-auto-vs-generationtype-identity-in-hibernate
*/
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="ID_UTILISATEUR")
	private long id;
	@Column(name="EMAIL_UTILISATEUR")
	private String email;
	@Column(name="PASSWORD_UTILISATEUR")
	private String password;
	
	@Column(name="EMPLOYE_SOLDE")
	private float solde;
	
	@ManyToOne
	@JoinColumn(name="EMPLYE_GROUP_FK")
	private Group group;
	
	@OneToMany(mappedBy="employee")
	private List<Operation> operations;
	
	@OneToMany(mappedBy="employee")
	private List<GroupMembers> groupmembres;

	
}
